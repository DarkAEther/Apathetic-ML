apiVersion: v1
kind: Pod
metadata:
  name: worker00
  labels:
    app: server
spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - server
            topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: nfs-store
          persistentVolumeClaim:
            claimName: nfsclaim
        - name: local-store
          persistentVolumeClaim:
            claimName: localclaim
      containers:
        - name: hydra
          volumeMounts:
            - name: nfs-store 
              mountPath: /dev/nfs/store
            - name: local-store
              mountPath: /dev/local/store
          image: altariax0x01/server
          imagePullPolicy: IfNotPresent
          env:
            - name: GET_HOSTS_FROM
              value: dns
          command: ["sh","start.sh"]
          ports:
            - containerPort: 80
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---

apiVersion: v1
kind: Pod
metadata:
  name: worker2
  labels:
    app: server
spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - server
            topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: nfs-store
          persistentVolumeClaim:
            claimName: nfsclaim
        - name: local-store
          persistentVolumeClaim:
            claimName: localclaim
      containers:
        - name: hydra
          volumeMounts:
            - name: nfs-store 
              mountPath: /dev/nfs/store
            - name: local-store
              mountPath: /dev/local/store
          image: altariax0x01/server
          imagePullPolicy: IfNotPresent
          env:
            - name: GET_HOSTS_FROM
              value: dns
          command: ["sh","start.sh"]
          ports:
            - containerPort: 80
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---

apiVersion: v1
kind: Pod
metadata:
  name: master
  labels:
    app: server
spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - server
            topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: nfs-store
          persistentVolumeClaim:
            claimName: nfsclaim
        - name: local-store
          persistentVolumeClaim:
            claimName: localclaim
      containers:
        - name: hydra
          volumeMounts:
            - name: nfs-store 
              mountPath: /dev/nfs/store
            - name: local-store
              mountPath: /dev/local/store
          image: 
          imagePullPolicy: IfNotPresent
          env:
            - name: GET_HOSTS_FROM
              value: dns
          command: ["sh","start.sh"]
          ports:
            - containerPort: 80
      dnsPolicy: ClusterFirst
      restartPolicy: Always
